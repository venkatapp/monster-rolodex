{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","src","monster","id","alt","name","email","phone","CardList","map","App","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","this","filteredMonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAIaA,G,YAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACpC,OACI,uBAAOC,UAAU,SAASC,KAAK,SAASH,YAAaA,EAAaI,SAAUH,MCFvEI,G,YAAO,SAACC,GAAD,OAChB,sBAAKJ,UAAU,iBAAf,UACK,qBAAKK,IAAG,+BAA0BD,EAAME,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKJ,EAAME,QAAQG,OACnB,4BAAIL,EAAME,QAAQI,QAClB,4BAAIN,EAAME,QAAQK,aCHdC,EAAW,SAACR,GACrB,OAAO,qBAAKJ,UAAU,YAAf,SACNI,EAAME,QAAQO,KAAI,SAAAP,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCqCZO,E,kDAtCb,aAAc,IAAD,8BACX,gBAcFf,aAAa,SAAAgB,GACX,EAAKC,SAAS,CACZC,YAAYF,EAAEG,OAAOC,SAfvB,EAAKC,MAAM,CACTC,SAAS,GACTJ,YAAY,IAJH,E,gEASO,IAAD,OACjBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACK,SAASK,S,+BAShC,IAAD,EAC0BC,KAAKP,MAA9BC,EADD,EACCA,SAAUJ,EADX,EACWA,YACXW,EAAkBP,EAASQ,QAAO,SAAAvB,GAAO,OAC7CA,EAAQG,KAAKqB,cAAcC,SAASd,EAAYa,kBACpD,OACA,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWC,KAAK,SAASH,YAAY,kBAAkBC,aAAc4B,KAAK5B,eAE1E,cAAC,EAAD,CAAUO,QAASsB,W,GA/BLI,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.531c177f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>{\r\n    return(\r\n        <input className=\"search\" type=\"search\" placeholder={placeholder} onChange={handleChange} \r\n         />\r\n    )\r\n}","import React from 'react';\r\n\r\nimport '../card/card-style.css';\r\n\r\nexport const Card = (props) =>(\r\n    <div className=\"card-container\">\r\n         <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n         <h3>{props.monster.name}</h3>\r\n         <p>{props.monster.email}</p>\r\n         <p>{props.monster.phone}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './card-list-style.css';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) =>{\r\n    return <div className=\"card-list\">\r\n    {props.monster.map(monster=>(\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\n\nimport {SearchBox} from './components/search-box/search-box.component';\n\nimport {CardList} from './components/card-list/card-list.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchField:''\n    }\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}))\n  }\n\n  handleChange=e=>{\n    this.setState({\n      searchField:e.target.value\n    })\n  }\n\n  render(){\n    const {monsters, searchField }= this.state;\n    const filteredMonster = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n  return (\n  <div className=\"App\">\n    <h1>Monsters Rolodex</h1>\n    <SearchBox type=\"search\" placeholder=\"search monsters\" handleChange={this.handleChange} />\n\n    <CardList monster={filteredMonster}>\n\n      </CardList>\n  </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}